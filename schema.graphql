interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  name: String
  posts(first: Int, after: String, last: Int, before: String): PostsConnection
}

type PostsConnection {
  edges: [PostEdge]
  pageInfo: PageInfo!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum AuthorPostRelationship {
  Author
  CoAuthor
}

type PostEdge {
  cursor: String!
  relationship: AuthorPostRelationship!
  node: Post!
}

type Post implements Node {
  id: ID!
  title: String!
  description: String
}

type Query {
  user(id: ID!): User
  node(id: ID!): Node
}

schema {
  query: Query
}
